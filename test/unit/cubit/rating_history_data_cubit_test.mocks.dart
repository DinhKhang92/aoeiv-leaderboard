// Mocks generated by Mockito 5.0.16 from annotations
// in aoeiv_leaderboard/test/unit/cubit/rating_history_data_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:aoeiv_leaderboard/models/player.dart' as _i2;
import 'package:aoeiv_leaderboard/models/rating.dart' as _i5;
import 'package:aoeiv_leaderboard/repositories/rating_history_data_repository.dart'
    as _i3;
import 'package:http/http.dart' as _i6;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakePlayer_0 extends _i1.Fake implements _i2.Player {}

/// A class which mocks [RatingHistoryDataRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRatingHistoryDataRepository extends _i1.Mock
    implements _i3.RatingHistoryDataRepository {
  MockRatingHistoryDataRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.Rating>> fetchRatingHistoryData(
          _i6.Client? client, int? leaderboardId, int? profileId) =>
      (super.noSuchMethod(
              Invocation.method(
                  #fetchRatingHistoryData, [client, leaderboardId, profileId]),
              returnValue: Future<List<_i5.Rating>>.value(<_i5.Rating>[]))
          as _i4.Future<List<_i5.Rating>>);
  @override
  _i4.Future<_i2.Player> fetchPlayerDataByProfileId(
          _i6.Client? client, int? leaderboardId, int? profileId) =>
      (super.noSuchMethod(
              Invocation.method(#fetchPlayerDataByProfileId,
                  [client, leaderboardId, profileId]),
              returnValue: Future<_i2.Player>.value(_FakePlayer_0()))
          as _i4.Future<_i2.Player>);
  @override
  String toString() => super.toString();
}
