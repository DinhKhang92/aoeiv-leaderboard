// Mocks generated by Mockito 5.0.17 from annotations
// in aoeiv_leaderboard/test/unit/cubit/rating_history_data_cubit_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:aoeiv_leaderboard/models/player.dart' as _i4;
import 'package:aoeiv_leaderboard/models/rating.dart' as _i7;
import 'package:aoeiv_leaderboard/providers/leaderboard_data_provider.dart'
    as _i3;
import 'package:aoeiv_leaderboard/providers/rating_history_data_provider.dart'
    as _i2;
import 'package:aoeiv_leaderboard/repositories/rating_history_data_repository.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeRatingHistoryDataProvider_0 extends _i1.Fake
    implements _i2.RatingHistoryDataProvider {}

class _FakeLeaderboardDataProvider_1 extends _i1.Fake
    implements _i3.LeaderboardDataProvider {}

class _FakePlayer_2 extends _i1.Fake implements _i4.Player {}

/// A class which mocks [RatingHistoryDataRepository].
///
/// See the documentation for Mockito's code generation for more information.
class MockRatingHistoryDataRepository extends _i1.Mock
    implements _i5.RatingHistoryDataRepository {
  MockRatingHistoryDataRepository() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RatingHistoryDataProvider get ratingHistoryDataProvider =>
      (super.noSuchMethod(Invocation.getter(#ratingHistoryDataProvider),
              returnValue: _FakeRatingHistoryDataProvider_0())
          as _i2.RatingHistoryDataProvider);
  @override
  _i3.LeaderboardDataProvider get leaderboardDataProvider =>
      (super.noSuchMethod(Invocation.getter(#leaderboardDataProvider),
              returnValue: _FakeLeaderboardDataProvider_1())
          as _i3.LeaderboardDataProvider);
  @override
  _i6.Future<List<_i7.Rating>> fetchRatingHistoryData(
          int? leaderboardId, int? profileId) =>
      (super.noSuchMethod(
              Invocation.method(
                  #fetchRatingHistoryData, [leaderboardId, profileId]),
              returnValue: Future<List<_i7.Rating>>.value(<_i7.Rating>[]))
          as _i6.Future<List<_i7.Rating>>);
  @override
  _i6.Future<_i4.Player> fetchPlayerDataByProfileId(
          int? leaderboardId, int? profileId) =>
      (super.noSuchMethod(
              Invocation.method(
                  #fetchPlayerDataByProfileId, [leaderboardId, profileId]),
              returnValue: Future<_i4.Player>.value(_FakePlayer_2()))
          as _i6.Future<_i4.Player>);
}
